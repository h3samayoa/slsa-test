name: .NET test
on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}

    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: setup .NET core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0

      - name: restore deps
        run: dotnet restore src/Sample.Core

      - name: build artifacts
        id: build
        run: dotnet build src/Sample.Core/ --configuration Release --no-restore

      - name: generate hashes
        shell: bash
        id: hash
        run: |
          cd src/Sample.Core/bin/Release/net7.0
          ls -R
          HASHES=$(sha256sum * | base64 -w0)
          echo "hashes=$HASHES" >> "$GITHUB_OUTPUT"

      - name: upload artifacts
        uses: "actions/upload-artifact@v3.1.2"
        with:
          name: cs_artifact
          path: src/Sample.Core/bin/Release/net7.0
          if-no-files-found: error
          retention-days: 5

  provenance:
    needs: [build]
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.7.0
    with:
      base64-subjects: "${{ needs.build.outputs.hashes }}"
      upload-assets: true
      upload-tag-name: "v0.0.1"
      provenance-name: "cs_artifact.intoto.jsonl"

  # release:
  #   needs: [build, provenance]
  #   runs-on: "ubuntu-latest"
  #   permissions:
  #     contents: write
  #     packages: write
  #   steps:
  #     - name: download artifacts
  #       uses: "actions/download-artifact@v3.0.2"
  #       id: download
  #       with:
  #         name: cs_artifact
  #         path: build/

  #     - name: display structure of downloaded files
  #       run: ls -R

  #     - name: upload artifacts
  #       uses: "actions/upload-artifact@v3.1.2"
  #       with:
  #         name: cs_artifact
  #         path: build/

  verify:
    needs: [build, provenance]
    runs-on: "ubuntu-latest"
    steps:
      - name: Install slsa-verifier
        uses: slsa-framework/slsa-verifier/actions/installer@v2.4.0

      - name: download artifacts
        uses: "actions/download-artifact@v3.0.2"
        with:
          name: cs_artifact
          path: build/

      - name: download provenance
        uses: "actions/download-artifact@v3.0.2"
        with:
          name: cs_artifact.intoto.jsonl

      - name: display struture of downloaded files
        run: ls -R

      - name: Verify artifact provenance
        run: |
          slsa-verifier verify-artifact build/Sample.Core.dll \
          --provenance-path cs_artifact.intoto.jsonl \
          --source-uri github.com/h3samayoa/slsa-test \
          --source-branch main \
          --print-provenance

      - name: list dir
        run: ls -R
